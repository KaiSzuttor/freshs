# Copyright (c) 2013 Kai Kratzer, Universit√§t Stuttgart, ICP,
# Allmandring 3, 70569 Stuttgart, Germany; all rights
# reserved unless otherwise stated.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307 USA

# This is the sample configuration file for the FRESHS-Server

########################################################################
# General options
########################################################################
[general]
# the port to listen on
listenport = 10000
# algorithm name, e.g. ffs, spres
algo_name = ffs
# warn or disconnect, if client was not seen since this amount of seconds
check_alive = 3600
# if this is set to 1, clients will be kicked if they do not report 
# something during the check_alive interval
kick_absent_clients = 0
# interval for periodic info and check
# (clients are checked for timeout in this interval)
t_infocheck = 15
# use ghost runs for precalculation
use_ghosts = 0
# Directory structure
folder_out  = OUTPUT
folder_conf = USERCONF
folder_db   = DB
folder_log  = LOG
# User-defined message string for the clients in the form of a python dict
# Do not use curly brackets. Use double quotes.
# example: "servername": "default-server", "pressure": 50
user_msg = "servername": "default-server"

########################################################################
# FFS sampling algorithm options
########################################################################
[ffs_control]
# require number of points on interface.
# If 0, only the number of runs which reached the interface is used
require_runs = 1
# minimum points per interface to proceed
min_success = 2
# configpoints must have at least this number of different origin
# points when tracing back to first interface
min_origin = 1
# fraction of successful different traces from interface to interface
min_origin_decay = 0.3
# try to increase the number of points this many times
min_origin_increase_count = 2
# If this option is enabled, the clients must support max_steps
parallel_escape = 1
# if parallel_escape is 1, the following number of simulation steps
# are used for the escape run
escape_steps = 100
# maximum ghost point transfers in a row between real runs
# (decrease this number, if you use ghosts and the server slows down on
# an interface change)
max_ghosts_between = 3


########################################################################
# SPRES sampling algorithm options
########################################################################
[spres_control]
test_absorb_at_B_every =     0
tau                    =   100
max_epoch              =  1000
max_shots_per_bin      =  10
target_forward         =     2
use_multDB             =       1


########################################################################
# NSFFS sampling algorithm options
########################################################################
[nsffs_control]


########################################################################
# options for automatic interface placement
########################################################################
[auto_interfaces]
# use automatic interface placement
auto_interfaces = 0
# minimal distance between interfaces
auto_mindist = 0.001
# order parameter is integer
auto_lambda_is_int = 0
# maximum number of calculation steps for exploring runs
auto_max_steps = 10000
# number of trials
auto_trials = 20
# number of runs per newly placed interface (M_0-counter)
auto_runs = 30
# minimum fraction of desired points on last interface before starting explorer runs
auto_min_points = 0.95
# minimum acceptable estimated flux
auto_flux_min = 0.3
# maximum acceptable estimated flux
auto_flux_max = 0.6
# moveunit for the trial interface method
auto_moveunit = 0.25
# use exploring scouts method. Clients must support this.
auto_histo = 1


########################################################################
# Hypersurfaces in terms of lambda, used e.g. in FFS and SPRES
########################################################################
[hypersurfaces]
# borderA = lambda_A = lambda_0
borderA = 0.2
# borderB = lambda_B = lambda_n
borderB = 2.0
lambda1 = 0.3
lambda2 = 0.4
lambda3 = 0.5
lambda4 = 0.6
lambda5 = 0.7
lambda6 = 0.8
lambda7 = 0.9
lambda8 = 1.0
lambda9 = 1.1

########################################################################
# Runs per interface, used e.g. in FFS
########################################################################
[runs_per_interface]
# borderA = lambda_A = lambda_0
borderA = 50
# borderB = lambda_B = lambda_n
borderB = 50
lambda1 = 24
lambda2 = 23
lambda3 = 22
lambda4 = 21
lambda5 = 20
lambda6 = 19
lambda7 = 18
lambda8 = 17
lambda9 = 16


